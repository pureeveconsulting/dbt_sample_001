# -------------------------------------------------------------------------------
# Program:        gosales_ci
# Project:        dbt-core-sample-duckdb
# Description:    CI workflow for Python lint/tests + SQLFluff (dbt templater)
# Author:         Manzar Ahmed
# First Created:  Jun 2025
# -------------------------------------------------------------------------------
# Program history:
# -------------------------------------------------------------------------------
# Date        Programmer             Description
# ----------  ---------------------  --------------------------------------------
# 2025-06-25  Manzar Ahmed           v0.01/Initial version for Flake8 & Pylint CI
# -------------------------------------------------------------------------------

name: PURE EVE CONSULTING CI - SQLFluff

on:
  push:
    branches: ['**']
  pull_request:
    branches: [main]

jobs:
  sqlfluff-lint:
    name: SQLFluff Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install SQLFluff & dbt pins (compatible)
        run: |
          python -m pip install --upgrade pip
          pip install "sqlfluff==3.*" "sqlfluff-templater-dbt==3.*"
          pip install "dbt-core==1.9.*" "dbt-duckdb==1.9.6"

      - name: Create minimal dbt profile (DuckDB in-memory)
        run: |
          mkdir -p ~/.dbt
          cat > ~/.dbt/profiles.yml <<'YAML'
          dbt_sample_001:
            target: ci
            outputs:
              ci:
                type: duckdb
                path: ":memory:"
                threads: 4
          YAML

      # Cache dbt_packages only if packages.yml exists
      - name: Cache dbt packages
        if: ${{ hashFiles('packages.yml') != '' }}
        uses: actions/cache@v4
        with:
          path: dbt_packages
          key: ${{ runner.os }}-dbt-packages-${{ hashFiles('packages.yml', 'package-lock.yml') }}
          restore-keys: |
            ${{ runner.os }}-dbt-packages-

      # Only run dbt deps if packages.yml exists
      - name: Install dbt packages (conditional)
        if: ${{ hashFiles('packages.yml') != '' }}
        env:
          DBT_PROFILES_DIR: ~/.dbt
        run: dbt deps

      - name: Lint dbt models with SQLFluff (fails on violations)
        env:
          DBT_PROFILES_DIR: ~/.dbt
        run: |
          sqlfluff lint models/ \
            --templater dbt \
            --dialect duckdb \
            --format github-annotation \
            --annotation-level failure \
            --write-output annotations.json

      - name: Annotate PR with SQLFluff output
        if: always()
        uses: yuzutech/annotations-action@v0.4.0
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          title: "SQLFluff Lint"
          input: "./annotations.json"